# i3 config file (v4)
#modkey
set $mod Mod1+Control

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Hack, Icons 9


# make it look good to start with
exec feh --bg-scale ~/pictures/mountains-wallpaper.png

# Settings for palm rejection .5 seconds after typing
exec syndaemon -i 0.5 -t -K -R

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

#todo: write shell script to alias this for dmenu as well
bindsym $mod+g exec chromium

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# move focused window
bindsym $mod+Shift+$left move left 20 px
bindsym $mod+Shift+$down move down 20 px
bindsym $mod+Shift+$up move up 20 px
bindsym $mod+Shift+$right move right 20 px

# split in horizontal orientation
bindsym $mod+s split v

# split in vertical orientation
bindsym $mod+v split h

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

bindsym $mod+Shift+x sticky toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod++w layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle
bindsym $mod+Left move workspace to output left
bindsym $mod+Right move workspace to output left
# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

#make notifications behave
for_window [class="^.*"] border pixel 0
for_window [class="Xfce4-notifyd"] floating enable
for_window [class="Xfce4-notifyd"] border none
for_window [instance="Download"] floating enable
for_window [class="Pnmixer"] floating enable
for_window [window_role="plugin_ui"] floating enable
for_window [title="Menu Update"] floating enable
for_window [title="___"] floating enable
#for_window [title="emacs"]

# Workspaces
# 
set $tag1 "1: home"

# 
set $tag2 "2: code"
# 
set $tag3 "3: music"
# 
set $tag4 "4: www"
set $tag5 "5: ssh" 
set $tag6 "6:" 
set $tag7 "7:" 
set $tag8 "8:" 
set $tag9 "9:" 
set $tag9 "10:"

# switch to workspace
bindsym $mod+1 workspace $tag1
bindsym $mod+2 workspace $tag2
bindsym $mod+3 workspace $tag3
bindsym $mod+4 workspace $tag4
bindsym $mod+5 workspace $tag5
bindsym $mod+6 workspace $tag6
bindsym $mod+7 workspace $tag7
bindsym $mod+8 workspace $tag8
bindsym $mod+9 workspace $tag9
bindsym $mod+0 workspace $tag10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $tag1
bindsym $mod+Shift+2 move container to workspace $tag2
bindsym $mod+Shift+3 move container to workspace $tag3
bindsym $mod+Shift+4 move container to workspace $tag4
bindsym $mod+Shift+5 move container to workspace $tag5
bindsym $mod+Shift+6 move container to workspace $tag6
bindsym $mod+Shift+7 move container to workspace $tag7
bindsym $mod+Shift+8 move container to workspace $tag8
bindsym $mod+Shift+9 move container to workspace $tag9
bindsym $mod+Shift+0 move container to workspace $tag10

assign [class="emacs"] $tag2
assign [class="Chromium"] $tag4

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"
bindsym $mod+p exec "~/bin/bebop_lock"

bindsym --release Print exec --no-startup-id maim ~/pictures/screenshots/$(date +%F-%T).png
bindsym --release Shift+Print exec --no-startup-id maim -i $(xdotool getactivewindow) ~/pictures/screenshots/$(date +%F-%T).png
bindsym --release Control+Shift+Print exec --no-startup-id "maim --nokeyboard -s -c 1,0,0,0.6  ~/pictures/screenshots/$(date +%F-%T).png"

 
#mouse
focus_follows_mouse no


# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 50 px or 50 ppt
        bindsym $down       resize grow height 50 px or 50 ppt
        bindsym $up         resize shrink height 50 px or 50 ppt
        bindsym $right      resize grow width 50 px or 50 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 50 px or 50 ppt
        bindsym Down        resize grow height 50 px or 50 ppt
        bindsym Up          resize shrink height 50 px or 50 ppt
        bindsym Right       resize grow width 50 px or 50 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

#bindsym $mod+y fullscreen disable; floating enable; resize set 700 400; sticky enable; move window to position 1220 680

#bindsym $mod+Shift+y fullscreen disable; floating enable; resize set 700 400; sticky enable; move window to position 1220 0

### WHEN https://github.com/i3/i3/commit/6b9b12c3038a766b68ea9c5e8a4b815163cd9049 gets moved to master
# marks the focused container and move it bottom right
bindsym $mod+y mark floating_video; fullscreen disable; floating enable; resize set 700 400; sticky enable; move window to position 1220 680

# focus the container and move top right
bindsym $mod+Shift+y mark return_window; [con_mark="floating_video"] focus; fullscreen disable; floating enable; resize set 700 400; sticky enable; move window to position 1220 0; [con_mark="return_window"] focus; unmark return_window;


bindsym $mod+r mode "resize"
# Volume Bindings
set $sink `pactl list short sinks | grep RUNNING | cut -f1`

#bindsym XF86AudioPause exec notify-send pause
#bindsym XF86AudioPrev exec notify-send prev
#bindsym XF86AudioNext exec notify-send next

bindsym XF86AudioRaiseVolume exec pamixer -i 5
bindsym XF86AudioLowerVolume exec pamixer -d 5
bindsym XF86AudioMute exec pamixer -t


#bindsym F3 exec pamixer -i 5
#bindsym F2 exec pamixer -d 5
#bindsym F1 exec pamixer -t


#amixer -D pulse sset Master 5%+
# ${$(xbacklight)%.*} gives the current backlight amount, rounded
bindsym XF86MonBrightnessDown exec xbacklight -dec 5 ; exec /home/atrus/bin/backlight_change_notify
bindsym XF86MonBrightnessUp exec xbacklight -inc 5 ; exec /home/atrus/bin/backlight_change_notify

#A little nicer windows
hide_edge_borders vertical
new_window pixel 0
smart_gaps on
gaps outer 0
gaps inner 10

#Trying out new powerline
bar {
        position top
        i3bar_command  /usr/bin/i3bar
        status_command /usr/bin/i3status

        #	verbose true
        colors {
          background #303030
          statusline #b8bb26

          focused_workspace  #4c7899 #285577 #ffffff
          active_workspace   #333333 #5f676a #ffffff
          inactive_workspace #333333 #222222 #888888
          urgent_workspace   #2f343a #900000 #ffffff
        }
}

#bar {
#    position top
#    height 16
#    verbose true
#    status_command /home/atrus/.i3/bumblebee-status/bumblebee-status -m gpmdp disk battery pasink brightness cpu date time -t gruvbox-powerline
#
#        colors {
#          background #303030
#          statusline #b8bb26
#          }
#}



# Power management:
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id ~/bin/bebop_lock, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"  

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym XF86PowerOff mode "$mode_system"


# Start programs we want!
exec --no-startup-id i3-msg 'workspace $tag4 exec /usr/bin/chromium;'

#Start emacs last since it will appear in the active workspace and it takes a while to load frame.
exec --no-startup-id i3-msg 'workspace $tag2 exec /usr/bin/emacs;'

# make first urxvt transparent 
exec --no-startup-id i3-msg ' workspace $tag1 exec ~/bin/transparent_term'

exec_always i3-msg 'exec notify-send --urgency=low "Starting i3..." "Hello Christopher"'

exec --no-startup-id i3-msg 'exec /usr/bin/dropbox'
